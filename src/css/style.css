* { box-sizing: border-box; }
body {
  font: 16px Arial;
}

html,
body {
  height: 100%;
  margin: 0;
}

.artifact_table {
  margin-top: 10px;
}

.panel-default .panel-title a {
  font-size: 20px;
  color: white;
}

.panel-default .panel-title a:after {
  padding-top: 5px;
  font-size: 30px;
  content: "-";
  float: right;
  margin-top: -12px;
}
.panel-default .panel-title a.collapsed:after {
  content: "+";
}

.btn-space {
  margin-right: 5px;
}

.autocomplete {
  /*the container must be positioned relative:*/
  position: relative;
  display: inline-block;
  
}
input {
  border: 1px solid transparent;
  background-color: #f1f1f1;
  padding: 10px;
  font-size: 16px;
}
input[type=text] {
  background-color: #f1f1f1;
  width: 100%;
}
input[type=submit] {
  background-color: DodgerBlue;
  color: #fff;
}
.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff;
  border-bottom: 1px solid #d4d4d4;
}
.autocomplete-items div:hover {
  /*when hovering an item:*/
  background-color: #e9e9e9;
}
.autocomplete-active {
  /*when navigating through the items using the arrow keys:*/
  background-color: DodgerBlue !important;
  color: #ffffff;
}


/* General classes for creating organized screen */
/* Includes wrappers to keep tags on same line */

.wrapper{
  margin: 0 auto; 
  width: 100%; 
  position: relative;
}

.meter {
  height: 20px;
  width: 40px;
  left: 10%;
  position: relative;
  background: #555;
  -moz-border-radius: 25px;
  -webkit-border-radius: 25px;
  border-radius: 25px;
  box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);
  transform: rotate(90deg);
}
.meter > span {
  display: block;
  height: 20px;
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
  background-color: #ffffff;
  background-image: linear-gradient(to bottom, #ffffff, #000000);
  box-shadow: inset 0 2px 9px rgba(255, 255, 255, 0.3),
  inset 0 -2px 6px rgba(0, 0, 0, 0.4);
  position: relative;
  overflow: hidden;
  /* transform: rotate(90deg); */
}


.circle {
  width: 170px;
  height: 170px;
  margin-left: 0;
  border: 7px solid #f1f1f1;
  border-radius: 100%;
  text-align: center;
  color: #fff;
  background-color: #a0c884;
  text-shadow: 0px 0px 30px rgba(119, 119, 119, 0.7);
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  align-items: center;
}
.circle-text {
  font-size: 56px;
  letter-spacing: 4px;
  font-family: "Montserrat","Helvetica Neue",Helvetica,Arial,sans-serif;
  font-weight: 700;
  margin: 0;
  width: 100%;
}

 /* Popup container */
 .popup {
  position: relative;
  display: inline-block;
  cursor: pointer;
}

/* The actual popup (appears on top) */
.popup .popuptext {
  visibility: hidden;
  width: 160px;
  background-color: #555;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 8px 0;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -80px;
}

/* Popup arrow */
.popup .popuptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

/* Toggle this class when clicking on the popup container (hide and show the popup) */
.popup .show {
  visibility: visible;
  -webkit-animation: fadeIn 1s;
  animation: fadeIn 1s
}

/* Add animation (fade in the popup) */
@-webkit-keyframes fadeIn {
  from {opacity: 0;}
  to {opacity: 1;}
}

@keyframes fadeIn {
  from {opacity: 0;}
  to {opacity:1 ;}
} 

.renderjson a {
  text-decoration: none;
}

.renderjson .disclosure {
  color: crimson;
  font-size: 150%;
}

.renderjson .syntax {
  color: grey;
}

.renderjson .string {
  color: darkred;
}

.renderjson .number {
  color: darkcyan;
}

.renderjson .boolean {
  color: blueviolet;
}

.renderjson .key {
  color: darkblue;
}

.renderjson .keyword {
  color: blue;
}

.renderjson .object.syntax {
  color: lightseagreen;
}

.renderjson .array.syntax {
  color: orange;
}

/* Modal stuff happens here */
/* https://www.w3schools.com/howto/howto_css_modals.asp */

/* This is styling for the quick control bar on the side */
/* Add a black background color to the top navigation */
.topnav {
  background-color: #333;
  overflow: hidden;
}

li {
  list-style-type: none;
}

/* The sidebar menu */
.sidenav {
  height: 100%;
  /* Full-height: remove this if you want "auto" height */
  width: 10%;
  /* Set the width of the sidebar */
  position: fixed;
  /* Fixed Sidebar (stay in place on scroll) */
  z-index: 1;
  /* Stay on top */
  top: 1;
  /* Stay at the top */
  left: 0;
  background-color: #343a40;
  /* Black */
  overflow-x: hidden;
  /* Disable horizontal scroll */
  padding-top: 0px;
  padding-left: 0px;

}


/* Style page content */
.main {
  margin-left: 160px;
  /* Same as the width of the sidebar */
  padding: 0px 10px;
}

/* On smaller screens, where height is less than 450px, change the style of the sidebar (less padding and a smaller font size) */
@media screen and (max-height: 450px) {
  .sidenav {
      padding-top: 15px;
  }

  .sidenav a {
      font-size: 18px;
  }
}
.quick_control {
  background-color: darkgrey;
  text-align: center;
  padding-bottom: 3%;
  border-bottom: 1px solid #343a40;
}

button {
  margin: 1px;
}

.btn {
  padding-top: 0px;
  padding-bottom: 0px;
}