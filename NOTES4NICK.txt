When it complains it doesn't know about marble_gui
source catkin_ws/devel/setup.bash

=================================================
ERRORS
=================================================
ERROR: cannot launch node of type [rosbridge_server/rosbridge_websocket]: rosbridge_server
FIX: sudo apt-get install ros-<rosdistro>-rosbridge-server


ERROR: cannot launch node of type [rosapi/rosapi_node]: rosapi
FIX: fixed by rosbridge


ERROR: cannot launch node of type [tf2_web_republisher/tf2_web_republisher]: tf2_web_republisher
FIX: 	clone the following to src
	git clone https://github.com/RobotWebTools/tf2_web_republisher
     	hit it with a catkin_make
	might need boost libraries 	

THIS DOESN'T WORK, FIX THIS
sudo apt -y install ros-$ROS_DISTRO-rosbridge-server ros-$ROS_DISTRO-tf2-web-republisher ros-$ROS_DISTRO-rosapi nodejs




====================================================
RVIZ THINGS
====================================================
make a custom panel for rviz
http://docs.ros.org/lunar/api/rviz_plugin_tutorials/html/panel_plugin_tutorial.html

how mouse events interact with vizualization (new tool)
http://docs.ros.org/lunar/api/rviz_plugin_tutorials/html/tool_plugin_tutorial.html

vizualization tutorials github
https://github.com/ros-visualization/visualization_tutorials

simple interactive marker server tutorial
http://wiki.ros.org/rviz/Tutorials/Interactive%20Markers%3A%20Writing%20a%20Simple%20Interactive%20Marker%20Server

interactive marker basic controls tutorial
http://wiki.ros.org/rviz/Tutorials/Interactive%20Markers%3A%20Basic%20Controls

This is very necessary for the interactive marker server
https://github.com/ros-visualization/interactive_markers




====================================================
MARKERS
====================================================
Good news, /marker_name/feedback will give the position of the marker. Setup a listener for each robot to do more manual control

To setup the server node, all that is needed is to create an instance of InteractiveMarkerServer and pass all 
InteractiveMarker messages to that object.

Note that you have to call applyChanges() after you have added, updated or removed interactive markers, their 
pose, menus or feedback functions. This will cause the InteractiveMarkerServer to apply all scheduled changes 
to its internal state and send an update message to all connected clients. This is done to make it possible to 
maintain a coherent state and minimize data traffic between the server and its clients.

TO FUTURE NICK!!!
when an artifact gets fused, send a message to the marker server with the relevent info. 

change the processFeedback function to boardcast the new pose of the marker when it changes to the right toppic for the js to listen and update 
in the gui



ip
172.31.0.1/16 cidr 16